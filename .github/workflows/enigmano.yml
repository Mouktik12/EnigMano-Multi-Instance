name: "⚡ EnigMano Instance Deployment"

on:
  workflow_dispatch:
    inputs:
      INSTANCE:
        description: "Instance number to deploy (e.g., 1, 2, 3...)"
        required: true
        default: "1"

jobs:
  deploy-enigmano:
    name: "🚀 Deploy EnigMano Instance"
    runs-on: windows-latest

    env:
      INSTANCE_ID: ${{ github.event.inputs.INSTANCE }}
      SECRET_SHAHZAIB: ${{ secrets.SECRET_SHAHZAIB }}
      NGROK_SHAHZAIB: ${{ secrets.NGROK_SHAHZAIB }}
      REPO: ${{ github.repository }}
      WORKFLOW_FILE: "enigmano.yml"
      DEPLOYMENT_ID: ${{ github.run_id }}
      NGROK_REGION: "us"  # 🔁 Force ngrok to use a stable region

    steps:
      - name: 📌 Deployment Parameters
        shell: pwsh
        run: |
          $prevInstance = [int]$env:INSTANCE_ID - 1
          Write-Host "==============================================="
          Write-Host "🔹 EnigMano Instance     : $env:INSTANCE_ID"
          Write-Host "🔢 Previous Instance     : $prevInstance"
          Write-Host "📦 GitHub Repository     : $env:REPO"
          Write-Host "🔁 Deployment Workflow   : $env:WORKFLOW_FILE"
          Write-Host "🆔 Deployment ID         : $env:DEPLOYMENT_ID"
          Write-Host "🕒 Current System Time   : $(Get-Date)"
          Write-Host "🕓 Time Zone Offset      : $([System.TimeZoneInfo]::Local.GetUtcOffset([datetime]::Now).TotalHours) hours"
          Write-Host "🗺️ Forced Ngrok Region   : $env:NGROK_REGION"
          Write-Host "==============================================="

      - name: 🔐 Validate Secrets
        shell: pwsh
        run: |
          if (-not $env:SECRET_SHAHZAIB) {
            Write-Error "❌ Missing GitHub Secret: SECRET_SHAHZAIB"
            exit 1
          }
          if (-not $env:NGROK_SHAHZAIB) {
            Write-Error "❌ Missing Ngrok Auth Token: NGROK_SHAHZAIB"
            exit 1
          }
          Write-Host "✅ All required secrets validated successfully"

      - name: ⚙️ Configure Ngrok (Region + Token)
        shell: pwsh
        run: |
          $ngrokPath = "$env:USERPROFILE\AppData\Local\ngrok"
          New-Item -ItemType Directory -Path $ngrokPath -Force | Out-Null
          $ngrokConfig = @"
authtoken: $env:NGROK_SHAHZAIB
region: $env:NGROK_REGION
"@
          $ngrokConfig | Out-File -FilePath "$ngrokPath\ngrok.yml" -Encoding utf8
          Write-Host "✅ Ngrok configuration file created at $ngrokPath\ngrok.yml"

      - name: 📥 Download EnigMano-instance.ps1
        shell: pwsh
        run: |
          $url = "https://gitlab.com/Shahzaib-YT/enigmano-multi-instance/-/raw/main/EnigMano-instance.ps1"
          Write-Host "🌐 Downloading EnigMano-instance.ps1..."
          Invoke-WebRequest -Uri $url -OutFile "EnigMano-instance.ps1" -UseBasicParsing
          if (!(Test-Path "./EnigMano-instance.ps1")) {
            Write-Error "❌ Failed to download EnigMano-instance.ps1"
            exit 1
          }
          Write-Host "✅ EnigMano-instance.ps1 downloaded successfully"

      - name: ⚔️ Execute EnigMano Instance Script
        shell: pwsh
        run: |
          Write-Host "🚦 Initiating EnigMano-instance.ps1"
          Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
          .\EnigMano-instance.ps1

      - name: 💠 Final Status
        if: always()
        shell: pwsh
        run: |
          Write-Host "✅ EnigMano Instance $env:INSTANCE_ID completed execution."
          Write-Host "🔋 Powered by: SHAHZAIB-YT"
          Write-Host "🏁 EnigMano deployment executed with tactical precision."
